{"version":3,"sources":["components/layout/Logo.js","components/layout/NavigationBar.js","components/layout/Header.js","components/Slider.js","pages/Homepage.js","components/ShopItem.js","pages/Shop.js","components/CartItem.js","pages/Cart.js","App.js","serviceWorker.js","index.js"],"names":["Logo","Fragment","NavigationBar","className","to","Header","slideImages","properties","duration","transitionDuration","infinite","indicators","arrows","Slider","style","backgroundImage","Homepage","ShopItem","props","item","id","cost","name","image","src","alt","onClick","addCartItem","Shop","useState","shopItems","setshopItems","useEffect","a","fetch","res","json","fetchData","map","key","CartItem","quantity","decrementCartItem","incrementCartItem","Cart","cartItems","total","length","App","setCartItems","setTotal","newTotal","reduce","acc","cartItem","undefined","find","forEach","newCartItems","filter","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b970ac8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../../styles/Logo.css\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>E-commerce</h1>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../styles/NavigationBar.css\";\r\n\r\nfunction NavigationBar() {\r\n  return (\r\n    <React.Fragment>\r\n      <nav>\r\n        <Link className=\"link\" to=\"/e_commerce_react/\">\r\n          Home\r\n        </Link>\r\n        <Link className=\"link\" to=\"/shop\">\r\n          Shop\r\n        </Link>\r\n        <Link className=\"link\" to=\"/cart\">\r\n          Cart\r\n        </Link>\r\n      </nav>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n","import React from \"react\";\r\nimport Logo from \"./Logo\";\r\nimport NavigationBar from \"./NavigationBar\";\r\nimport \"../../styles/Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <Logo />\r\n      <NavigationBar />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Slide } from \"react-slideshow-image\";\r\nimport \"../styles/Slider.css\";\r\n\r\nconst slideImages = [\r\n  \"https://source.unsplash.com/random/1600x900/?forest\",\r\n  \"https://source.unsplash.com/random/1600x900/?water\",\r\n  \"https://source.unsplash.com/random/1600x900/?porn\"\r\n];\r\n\r\nconst properties = {\r\n  duration: 5000,\r\n  transitionDuration: 500,\r\n  infinite: true,\r\n  indicators: true,\r\n  arrows: true\r\n};\r\n\r\nfunction Slider() {\r\n  return (\r\n    <div className=\"slide-container\">\r\n      <Slide {...properties}>\r\n        <div className=\"each-slide\">\r\n          <div style={{ backgroundImage: `url(${slideImages[0]})` }}></div>\r\n        </div>\r\n        <div className=\"each-slide\">\r\n          <div style={{ backgroundImage: `url(${slideImages[1]})` }}></div>\r\n        </div>\r\n        <div className=\"each-slide\">\r\n          <div style={{ backgroundImage: `url(${slideImages[2]})` }}></div>\r\n        </div>\r\n      </Slide>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport Slider from \"../components/Slider.js\";\r\n\r\nfunction Homepage() {\r\n  return (\r\n    <React.Fragment>\r\n      <Slider />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../styles/ShopItem.css\";\r\n\r\nfunction ShopItem(props) {\r\n  const { id, cost, name, image } = props.item;\r\n\r\n  return (\r\n    <div className=\"ShopItem\">\r\n      <img src={image} alt={`ShopItem__Image${id}`} />\r\n      <div className=\"ShopItem__Description\">\r\n        <h3>{name}</h3>\r\n        <p>Price: {cost}</p>\r\n        <button onClick={() => props.addCartItem(props.item)}>\r\n          Add to Cart\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nShopItem.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ShopItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ShopItem from \"../components/ShopItem.js\";\r\nimport \"../styles/Shop.css\";\r\n\r\nfunction Shop(props) {\r\n  const [shopItems, setshopItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await fetch(\r\n        \"https://5db179198087400014d38a73.mockapi.io/api/v1/products\"\r\n      );\r\n      setshopItems(await res.json());\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"ShopList\">\r\n      {shopItems.map(item => (\r\n        <ShopItem key={item.id} item={item} addCartItem={props.addCartItem} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nShop.propTypes = {\r\n  addCartItem: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Shop;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../styles/CartItem.css\";\r\n\r\nfunction CartItem(props) {\r\n  const { cost, name, quantity } = props.item;\r\n\r\n  return (\r\n    <div className=\"CartItem\">\r\n      <h3>{name}</h3>\r\n      <p>Price: {cost}</p>\r\n      <div className=\"CartItem__Quantity\">\r\n        <button onClick={() => props.decrementCartItem(props.item)}>-</button>\r\n        <p>Quantity: {quantity}</p>\r\n        <button onClick={() => props.incrementCartItem(props.item)}>+</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCartItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  decrementCartItem: PropTypes.func.isRequired,\r\n  incrementCartItem: PropTypes.func.isRequired\r\n};\r\n\r\nexport default CartItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CartItem from \"../components/CartItem.js\";\r\nimport \"../styles/Cart.css\";\r\n\r\nfunction Cart(props) {\r\n  const { cartItems, decrementCartItem, incrementCartItem, total } = props;\r\n  return cartItems.length === 0 ? (\r\n    <h3 className=\"Empty\">The cart is empty.</h3>\r\n  ) : (\r\n    <>\r\n      <div className=\"CartList\">\r\n        {cartItems.map(item => (\r\n          <CartItem\r\n            key={item.id}\r\n            item={item}\r\n            decrementCartItem={decrementCartItem}\r\n            incrementCartItem={incrementCartItem}\r\n          />\r\n        ))}\r\n      </div>\r\n      <p className=\"CartList__Total\">Total: {total}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nCart.propTypes = {\r\n  cartItems: PropTypes.array.isRequired,\r\n  decrementCartItem: PropTypes.func.isRequired,\r\n  incrementCartItem: PropTypes.func.isRequired,\r\n  total: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Cart;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/layout/Header.js\";\nimport Homepage from \"./pages/Homepage.js\";\nimport Shop from \"./pages/Shop.js\";\nimport Cart from \"./pages/Cart.js\";\nimport \"./styles/App.css\";\n\nfunction App() {\n  const [cartItems, setCartItems] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    const newTotal = cartItems.reduce(\n      (acc, cartItem) => acc + cartItem.quantity * cartItem.cost,\n      0\n    );\n    setTotal(newTotal);\n  }, [cartItems]);\n\n  const addCartItem = item => {\n    if (cartItems.find(cartItem => item.id === cartItem.id) !== undefined) {\n      cartItems.forEach(cartItem => {\n        if (cartItem.id === item.id) {\n          cartItem.quantity++;\n        }\n      });\n      setCartItems([...cartItems]);\n    } else {\n      setCartItems([...cartItems, { ...item, quantity: 1 }]);\n    }\n  };\n\n  const incrementCartItem = item => {\n    item.quantity++;\n    setCartItems([...cartItems]);\n  };\n\n  const decrementCartItem = item => {\n    item.quantity--;\n    if (item.quantity === 0) {\n      const newCartItems = cartItems.filter(cartItem => cartItem.quantity > 0);\n      setCartItems([...newCartItems]);\n    } else {\n      setCartItems([...cartItems]);\n    }\n  };\n\n  return (\n    <Router>\n      <div id=\"app\">\n        <Header />\n        <div className=\"container\">\n          <Route exact path=\"/e_commerce_react/\" component={Homepage} />\n          <Route\n            path=\"/shop\"\n            render={() => <Shop addCartItem={addCartItem} />}\n          />\n          <Route\n            path=\"/cart\"\n            render={() => (\n              <Cart\n                cartItems={cartItems}\n                total={total}\n                decrementCartItem={decrementCartItem}\n                incrementCartItem={incrementCartItem}\n              />\n            )}\n          />\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}